#!/usr/bin/env bash

set -e

res="$(cat $1)"
sedMap=()

length=$(echo "$res" | yq e '.vars | length' -)

for (( i=0; i<$length; i++ ))
do
   var="$(echo "$res" | yq e '.vars['$i']' -)"
   varName=$(echo "$var" | yq e '.name' -)

   if [ "$(echo "$var" | yq e '. | has("valueFrom")' -)" == 'true' ];
   then
   
      # get the environment variables
      if [ "$(echo "$var" | yq e '.valueFrom | has("env")' -)" == 'true' ]
      then
         envVar=$(echo "$var" | yq e '.valueFrom.env' -)
         var="$(echo "$var" | yq e '.value = env('$envVar')' -)"
      
      # find value based on live reference to cluster
      elif [ "$(echo "$var" | yq e '.valueFrom | has("liveRef")' -)" == 'true' ]
      then
         ref="$(echo "$var" | yq e '.valueFrom.liveRef' -)"
         refName="$(echo "$ref" | yq e '.name' -)"
         refNS="$(echo "$ref" | yq e '.namespace // "default"' -)"
         fieldPath="$(echo "$ref" | yq e '.fieldPath' -)"
         liveRef="$(kubectl get "$refName" -n "$refNS" -o=jsonpath="{$fieldPath}")"
         var="$(echo "$var" | yq e '.value = "'$liveRef'"' -)"
      fi

   fi

   varValue="$(echo "$var" | yq e '.value' -)"
   sedMap+=(-e "s#\$(${varName})#${varValue}#g")
done

# echo "${sedMap[@]}"
sed "${sedMap[@]}"